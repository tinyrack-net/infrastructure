apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ghost-mariadb-cluster-helm-release
  namespace: ghost-system
spec:
  chart:
    spec:
      chart: mariadb-cluster
      version: "25.8.3"
      sourceRef:
        kind: HelmRepository
        name: mariadb-operator-repository
        namespace: flux-system
  interval: 5m
  timeout: 5m
  releaseName: ghost-mariadb-cluster
  values:
    mariadb:
      image: docker-registry1.mariadb.com/library/mariadb:11.8.2
      rootPasswordSecretKeyRef:
        name: ghost-database-secret
        key: mysql-password
      storage:
        storageClass: longhorn-strict-local
        size: 3Gi
      replicas: 1
      galera:
        enabled: false
      replication:
        enabled: false
      bootstrapFrom:
        backupRef:
          name: physicalbackup
          kind: PhysicalBackup
    databases:
      - name: ghost
        characterSet: utf8
        collate: utf8_general_ci
        cleanupPolicy: Delete
        requeueInterval: 10h
        retryInterval: 30s
    users:
      - name: ghost
        passwordSecretKeyRef:
          name: ghost-database-secret
          key: mysql-password
        host: "%"
        cleanupPolicy: Delete
        requeueInterval: 10h
        retryInterval: 30s
    grants:
      - name: ghost
        privileges:
          - "ALL PRIVILEGES"
        database: "*"
        table: "*"
        username: ghost
        grantOption: true
        host: "%"
        cleanupPolicy: Delete
        requeueInterval: 10h
        retryInterval: 30s
    physicalBackups:
      - name: physicalbackup
        schedule:
          cron: '0 */4 * * *'
          suspend: false
          immediate: true
        compression: gzip
        maxRetention: 720h
        storage:
          s3:
            bucket: tinyrack-prod
            prefix: apps/ghost/
            endpoint: fsn1.your-objectstorage.com
            region: hetzner
            accessKeyIdSecretKeyRef:
              name: tinyrack-s3-secret
              key: AWS_ACCESS_KEY_ID
            secretAccessKeySecretKeyRef:
              name: tinyrack-s3-secret
              key: AWS_SECRET_ACCESS_KEY
            tls:
              enabled: true

